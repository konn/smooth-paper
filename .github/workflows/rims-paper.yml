# This is a basic workflow to help you get started with Actions

name: RIMS Kokyuroku

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  WORKDIR: rims
  JOBNAME: rims-smooth-paper
  ARTIFACT_NAME: RIMS Kokyuroku
  PAGE_LOWERBOUND: 0 # 10 # Disabled for now, as we haven't actually started this project!
  PAGE_UPPERBOUND: 20

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on:  ubuntu-18.04
    container: docker://konn/texlive2020-slim:20201227.4

    steps:
      - uses: actions/checkout@v2
      - name: Cache
        id: tex-cache
        uses: actions/cache@v2.1.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            ${{env.WORKDIR}}/${{env.JOBNAME}}.fdb_latexmk
            ${{env.WORKDIR}}/.latex/

          # An explicit key for restoring and saving the cache
          key: ${{env.JOBNAME}}-${{github.ref}}-${{ runner.os }}-${{ hashFiles('**/*.tex', '**/*.sty', '**/*.fdb_latexmk', 'extract-generateds.lua') }}
          restore-keys: |
            ${{env.JOBNAME}}-${{github.ref}}-${{ runner.os }}-
            ${{env.JOBNAME}}-${{github.ref}}-
            ${{env.JOBNAME}}-master-
      - name: Create .latex directory if missing
        run: |
          [ -d ${WORKDIR}/.latex ] || mkdir -p ${WORKDIR}/.latex
      - name: Restore latex files
        if: steps.tex-cache.outputs.cache-hit == 'true'
        run: |
          cd $GITHUB_WORKSPACE/${WORKDIR}
          if [ -n "$(find .latex/ -mindepth 1 -maxdepth 1)" ]; then
            cp -r .latex/* .
          else
            echo "::warn::No .latex/ directory found. skip"
          fi
      - name: Typeset it
        run: |
          cd ${GITHUB_WORKSPACE}/${WORKDIR}
          ls
          latexmk -pdflua ${JOBNAME}.tex
      
      - name: Store latex generated files
        run: |
          cd ${GITHUB_WORKSPACE}/${WORKDIR}
          ls
          for fdb in $(find . -name "*.fdb_latexmk"); do
              for i in $(texlua ${GITHUB_WORKSPACE}/ci-resources/extract-generateds.lua <$fdb); do
                echo "::debug::cp $(dirname $fdb)/$i .latex/$(dirname $fdb)/$i"
                cp $(dirname $fdb)/$i .latex/$(dirname $fdb)/$i
              done
          done

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ${{env.WORKDIR}}/${{env.JOBNAME}}.pdf
          if-no-files-found: error # optional, default is warn
          retention-days: 90

  lint:
    runs-on: ubuntu-18.04
    container: docker://konn/poppler-only:latest
    
    needs:
    - build
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.7
      with:
        # Artifact name
        name: ${{env.ARTIFACT_NAME}}
        # Destination path
        path: .
    - name: Tell me your pages
      run: |
        PAGES=$(pdfinfo ${JOBNAME}.pdf | grep "Pages:" | cut -d ':' -f2 | sed 's/[ \t]*//g')
        if [ ${PAGE_LOWERBOUND} -lt ${PAGES} -a ${PAGES} -lt ${PAGE_UPPERBOUND} ]; then
          echo "OK: Current pages ${PAGES} satisfies range."
        else
          echo "::error::Current page count ${PAGES} exceeds range ${PAGE_LOWERBOUND}..${PAGE_UPPERBOUND}!"
          exit 1
        fi
